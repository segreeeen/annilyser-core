import java.text.SimpleDateFormat

plugins {
    id "com.jfrog.bintray" version "1.8.4"
    id "com.jfrog.artifactory" version "4.5.4"
}
def core_version = '0.0.1'

group 'com.nullwert.annilyser'
version core_version + (Boolean.valueOf(System.getProperty("snapshot")) ? "-SNAPSHOT" : "")

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'maven'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

jar {
    archiveFileName = 'annilyser-core'
    version = version
}

artifactory {
    contextUrl = 'http://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.getenv('BINTRAY_USER')
            password = System.getenv('BINTRAY_KEY')
        }
        defaults {
            publications('MyPublication')
            publishArtifacts = true
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
    clientConfig.info.setBuildNumber(new SimpleDateFormat("DDmmyyhhmmss").format(new Date()))
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['MyPublication']
    publish = true
    override = true
    pkg {
        repo = 'maven'
        name = 'annilyser-core'
        userOrg = 'segreeeen'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/annilyser-core.git'
        version {
            name = version
        }
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
}

wrapper {
    gradleVersion = '6.0.1'
    distributionUrl = distributionUrl.replace("bin", "all")
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "segreeeen"
            name "Felix Batusic"
            email "felix@batusic.net"
        }
    }

    scm {
        url "https://github.com/segreeeen/annilyser-core"
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadocJar')
}

// Create the publication with the pom configuration:
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar
            groupId 'com.nullwert.annilyser'
            artifactId 'annilyser-core'
            version version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Annilyser-Core for parsing Shotbow Annihilation Gamelogs.')
                root.appendNode('name', 'Annilyser-Core')
                root.appendNode('url', 'https://github.com/segreeeen/annilyser-core')
                root.children().last() + pomConfig
            }
        }
    }
}

